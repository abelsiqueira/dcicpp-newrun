sifdecoder -A pc64.lnx.gfo  KOEBHELB

 Problem name: KOEBHELB

 Double precision version will be formed

 The objective function uses 156 nonlinear groups
 
 There is 1 free variable 
 There are 2 variables bounded only from below 
 
 
 File successfully decoded
/home/abel/documentos/dcicpp-newrun/output-dcicpp-fast-2016-11-24--13:32
No tools
make: *** No rule to make target 'dcicpp'.  Stop.
Starting
Solving
ekpp/ek = 0.983547
ekpp/ekp = 0.983932
ekpp/ek = 0.981422
ekpp/ekp = 0.997449
ekpp/ek = 0.991099
ekpp/ekp = 0.993633
ekpp/ek = 0.977726
ekpp/ekp = 0.983991
ekpp/ek = 0.979797
ekpp/ekp = 0.995738
ekpp/ek = 0.954905
ekpp/ekp = 0.958993
ekpp/ek = 0.953805
ekpp/ekp = 0.994591
ekpp/ek = 0.887814
ekpp/ekp = 0.892642
ekpp/ek = 0.889964
ekpp/ekp = 0.996999
ekpp/ek = 0.98948
ekpp/ekp = 0.992458
ekpp/ek = 0.973658
ekpp/ekp = 0.981058
ekpp/ek = 0.933779
ekpp/ekp = 0.951808
ekpp/ek = 0.944286
ekpp/ekp = 0.992097
ekpp/ek = 0.972358
ekpp/ekp = 0.980103
ekpp/ek = 0.930457
ekpp/ekp = 0.949346
ekpp/ek = 0.941443
ekpp/ekp = 0.991676
ekpp/ek = 0.970885
ekpp/ekp = 0.979035
ekpp/ek = 0.926746
ekpp/ekp = 0.946592
ekpp/ek = 0.938264
ekpp/ekp = 0.991202
ekpp/ek = 0.969232
ekpp/ekp = 0.977835
ekpp/ek = 0.92259
ekpp/ekp = 0.943503
ekpp/ek = 0.934699
ekpp/ekp = 0.990669
ekpp/ek = 0.967374
ekpp/ekp = 0.976485
ekpp/ek = 0.917928
ekpp/ekp = 0.940033
ekpp/ek = 0.930696
ekpp/ekp = 0.990068
ekpp/ek = 0.965283
ekpp/ekp = 0.974966
ekpp/ek = 0.912702
ekpp/ekp = 0.936138
ekpp/ek = 0.836034
ekpp/ekp = 0.893068
ekpp/ek = 0.86019
ekpp/ekp = 0.963186
ekpp/ek = 0.944679
ekpp/ekp = 0.980786
ekpp/ek = 0.933522
ekpp/ekp = 0.95181
ekpp/ek = 0.944192
ekpp/ekp = 0.991995
ekpp/ek = 0.972276
ekpp/ekp = 0.980121
ekpp/ek = 0.931032
ekpp/ekp = 0.949915
ekpp/ek = 0.942092
ekpp/ekp = 0.991764
ekpp/ek = 0.971335
ekpp/ekp = 0.979401
ekpp/ek = 0.928586
ekpp/ekp = 0.948116
ekpp/ek = 0.940049
ekpp/ekp = 0.991491
ekpp/ek = 0.970374
ekpp/ekp = 0.978702
ekpp/ek = 0.926289
ekpp/ekp = 0.946447
ekpp/ek = 0.938154
ekpp/ekp = 0.991238
ekpp/ek = 0.969509
ekpp/ekp = 0.978079
ekpp/ek = 0.924341
ekpp/ekp = 0.945058
ekpp/ek = 0.93659
ekpp/ekp = 0.99104
ekpp/ek = 0.968856
ekpp/ekp = 0.977615
ekpp/ek = 0.923056
ekpp/ekp = 0.944192
ekpp/ek = 0.935644
ekpp/ekp = 0.990946
ekpp/ek = 0.968588
ekpp/ekp = 0.977437
ekpp/ek = 0.922913
ekpp/ekp = 0.944217
ekpp/ek = 0.859119
ekpp/ekp = 0.909875
ekpp/ek = 0.887493
ekpp/ekp = 0.975402
ekpp/ek = 0.961025
ekpp/ekp = 0.98526
ekpp/ek = 0.951721
ekpp/ekp = 0.965958
ekpp/ek = 0.960642
ekpp/ekp = 0.994496
ekpp/ek = 0.981225
ekpp/ekp = 0.986656
ekpp/ek = 0.955777
ekpp/ekp = 0.968703
ekpp/ek = 0.964023
ekpp/ekp = 0.995168
ekpp/ek = 0.983436
ekpp/ekp = 0.988211
ekpp/ek = 0.961124
ekpp/ekp = 0.97259
ekpp/ek = 0.968606
ekpp/ekp = 0.995903
ekpp/ek = 0.985997
ekpp/ekp = 0.990053
ekpp/ek = 0.967732
ekpp/ekp = 0.977455
ekpp/ek = 0.974283
ekpp/ekp = 0.996755
ekpp/ek = 0.988986
ekpp/ekp = 0.992207
ekpp/ek = 0.97547
ekpp/ekp = 0.983132
ekpp/ek = 0.96455
ekpp/ekp = 0.981099
ekpp/ek = 0.978064
ekpp/ekp = 0.996907
ekpp/ek = 0.994638
ekpp/ekp = 0.997724
ekpp/ek = 0.995376
ekpp/ekp = 0.997647
ekpp/ek = 0.997497
ekpp/ekp = 0.99985
ekpp/ek = 0.999586
ekpp/ekp = 0.999736
ekpp/ek = 1.00037
ekpp/ekp = 1.00064
ekpp/ek = 1.00094
ekpp/ekp = 1.0003
ekpp/ek = 1.00114
ekpp/ekp = 1.00084
ekpp/ek = 1.00421
ekpp/ekp = 1.00336
ekpp/ek = 1.00409
ekpp/ekp = 1.00072
ekpp/ek = 1.00258
ekpp/ekp = 1.00186
ekpp/ek = 1.00768
ekpp/ekp = 1.00581
ekpp/ek = 1.02124
ekpp/ekp = 1.01534
ekpp/ek = 1.02009
ekpp/ekp = 1.00468
ekpp/ek = 1.00663
ekpp/ekp = 1.00194
ekpp/ek = 1.0086
ekpp/ekp = 1.00665
ekpp/ek = 1.01931
ekpp/ekp = 1.01258
ekpp/ek = 1.0262
ekpp/ekp = 1.01345
ekpp/ek = 1.02168
ekpp/ekp = 1.00812
ekpp/ek = 1.00938
ekpp/ekp = 1.00125
ekpp/ek = 1.00474
ekpp/ekp = 1.00349
ekpp/ek = 1.01127
ekpp/ekp = 1.00775
ekpp/ek = 1.0083
ekpp/ekp = 1.00055
ekpp/ek = 1.00142
ekpp/ekp = 1.00087
ekpp/ek = 1.001
ekpp/ekp = 1.00014
ekpp/ek = 0.999794
ekpp/ekp = 0.999658
ekpp/ek = 0.997152
ekpp/ekp = 0.997493
ekpp/ek = 0.975093
ekpp/ekp = 0.977544
ekpp/ek = 0.978335
ekpp/ekp = 1.00081
ekpp/ek = 1.00284
ekpp/ekp = 1.00203
ekpp/ek = 1.00711
ekpp/ekp = 1.00507
ekpp/ek = 0.97999
ekpp/ekp = 0.975042
ekpp/ek = 0.925374
ekpp/ekp = 0.94906
ekpp/ek = 0.840165
ekpp/ekp = 0.88526
ekpp/ek = 0.712507
ekpp/ekp = 0.804856
ekpp/ek = 0.83125
ekpp/ekp = 1.03279
ekpp/ek = 0.993862
ekpp/ekp = 0.962305
ekpp/ek = 0.97816
ekpp/ekp = 1.01648
ekpp/ek = 1.02727
ekpp/ekp = 1.01062
ekpp/ek = 1.01185
ekpp/ekp = 1.00122
ekpp/ek = 1.00124
ekpp/ekp = 1.00002
Showing
**********************************************************
Problem name: KOEBHELB

Number of Variables: 3
Number of Constraints: 0
             Equality: 0
           has_inequality: 0

EXIT: The Algorithm has Converged
f(x) = 77.5163
|c(x)| = 0
|g(x) + J(x)'*y| = 3.63839e-10
y offset = 0
Number of Iterations = 110
Elapsed Time = 0.0259137 s
Normal iterations = 0
Average number of normal iterations = 0
Maximum number of normal iterations during one iteration = 0
Iterations with 0  normal iterations = 110
Iterations with 1  normal iteration  = 0
Iterations with 2+ normal iterations = 0
Restorations = 0
Average number of restorations per normal iteration = NA
**********************************************************
Done
Setup time: 0
Execution time: 0.103332
